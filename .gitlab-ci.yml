stages:
    - build
    - frontend-test
    - backend-test
    - optimisation-test
build:
  stage: build
  script: 'make'
  artifacts:
    paths:
    - 'target/'
syntax-tests:
  stage: frontend-test
  script: 'bash test.sh syntax_err'
  dependencies:
  - 'build'
semantic-tests:
  stage: frontend-test
  script: 'bash test.sh semantic_err'
  dependencies:
  - 'build'
basic-tests:
  stage: backend-test
  script: 'bash test_backend.sh basic'
  dependencies:
  - 'build'
seqeuence-tests:
  stage: backend-test
  script: 'bash test_backend.sh sequence'
  dependencies:
    - 'build'
print-tests:
  stage: backend-test
  script: 'bash test_backend.sh print'
  dependencies:
    - 'build'
variable-tests:
  stage: backend-test
  script: 'bash test_backend.sh variable'
  dependencies:
    - 'build'
expression-tests:
  stage: backend-test
  script: 'bash test_backend.sh expression'
  dependencies:
    - 'build'
array-tests:
  stage: backend-test
  script: 'bash test_backend.sh array'
  dependencies:
    - 'build'
conditional-tests:
  stage: backend-test
  script: 'bash test_backend.sh conditional'
  dependencies:
    - 'build'
loop-tests:
  stage: backend-test
  script: 'bash test_backend.sh loop'
  dependencies:
    - 'build'
scope-tests:
  stage: backend-test
  script: 'bash test_backend.sh scope'
  dependencies:
    - 'build'
simple-function-tests:
  stage: backend-test
  script: 'bash test_backend.sh simple-function'
  dependencies:
    - 'build'
nested-function-tests:
  stage: backend-test
  script: 'bash test_backend.sh nested-function'
  dependencies:
    - 'build'
runtime-error-tests:
  stage: backend-test
  script: 'bash test_backend.sh runtime-error'
  dependencies:
    - 'build'
pair-tests:
  stage: backend-test
  script: 'bash test_backend.sh pair'
  dependencies:
    - 'build'
opt-basic-tests:
  stage: optimisation-test
  script: 'bash test_optimisation.sh basic'
  dependencies:
  - 'build'
opt-seqeuence-tests:
  stage: optimisation-test
  script: 'bash test_optimisation.sh sequence'
  dependencies:
    - 'build'
opt-print-tests:
  stage: optimisation-test
  script: 'bash test_optimisation.sh print'
  dependencies:
    - 'build'
opt-variable-tests:
  stage: optimisation-test
  script: 'bash test_optimisation.sh variable'
  dependencies:
    - 'build'
opt-expression-tests:
  stage: optimisation-test
  script: 'bash test_optimisation.sh expression'
  dependencies:
    - 'build'
opt-array-tests:
  stage: optimisation-test
  script: 'bash test_optimisation.sh array'
  dependencies:
    - 'build'
opt-conditional-tests:
  stage: optimisation-test
  script: 'bash test_optimisation.sh conditional'
  dependencies:
    - 'build'
opt-loop-tests:
  stage: optimisation-test
  script: 'bash test_optimisation.sh loop'
  dependencies:
    - 'build'
opt-scope-tests:
  stage: optimisation-test
  script: 'bash test_optimisation.sh scope'
  dependencies:
    - 'build'
opt-simple-function-tests:
  stage: optimisation-test
  script: 'bash test_optimisation.sh simple-function'
  dependencies:
    - 'build'
opt-nested-function-tests:
  stage: optimisation-test
  script: 'bash test_optimisation.sh nested-function'
  dependencies:
    - 'build'
opt-runtime-error-tests:
  stage: optimisation-test
  script: 'bash test_optimisation.sh runtime-error'
  dependencies:
    - 'build'
opt-pair-tests:
  stage: optimisation-test
  script: 'bash test_optimisation.sh pair'
  dependencies:
    - 'build'
